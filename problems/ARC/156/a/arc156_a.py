#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
from functools import lru_cache


# def solve(a: str, b: List[str], c: List[str], d: str, e: str) -> Tuple[str, str, List[str]]:
def solve(N, S):
    ans = 0
    d = []
    for i in range(N):
        if S[i] == '1':
            d.append(i)

    if len(d) % 2 != 0:
        return -1
    else:
        if len(d) == 2:
            if d[1] - d[0] == 1:
                if N <= 3:
                    return -1
                elif N == 4:
                    if S == '0110':
                        return 3
                    else:
                        return 2
                else:
                    return 2
            else:
                return 1
        else:
            return len(d) // 2

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    T = int(input())

    for _ in range(T):
        N = int(input())
        S = input()
        print(solve(N, S))


if __name__ == '__main__':
    main()

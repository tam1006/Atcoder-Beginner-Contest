#!/usr/bin/env python3
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

import platform
if platform.python_implementation() == 'PyPy':
    import pypyjit
    pypyjit.set_param('max_unroll_recursion=-1')

YES = 'Yes'
NO = 'No'


# def solve(N: int, A: int, B: int, C: int, D: int) -> str:
def solve(N, A, B, C, D):
    # N -= (D+1 + A+1)
    # B -= 1
    # C -= 1

    # if B < 0 or C < 0:
        # return NO

    # if N % 2 == 0:
        # if max(B, C) == min(B, C) + 1:
            # return YES
        # else:
            # return NO
    # else:
        # if max(B, C) == min(B, C):
            # return YES
        # else:
            # return NO

    if B == C:
        # if max(A, D) >= B+1 and min(A, D) >= B:
            # return YES
        # else:
            # return NO
        return YES
    # elif B == C + 1:
        # if A 
    # elif B + 1 == C:
        # pass
    elif max(B, C) == min(B, C) + 1:
        # if A >= max(B, C) and D >= max(B, C):
            # return YES
        # else:
            # return NO
        return YES
    else:
        return NO



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, A, B, C, D = map(int, input().split())
    a = solve(N, A, B, C, D)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

import platform
if platform.python_implementation() == 'PyPy':
    import pypyjit
    pypyjit.set_param('max_unroll_recursion=-1')

# def solve(N: int, K: int, S: str) -> int:
def solve(N, K, S):
    x = [0]
    y = [0]
    for i in range(N):
        if S[i] == 'X':
            x.append(x[-1] + 1)
            y.append(y[-1])
        else:
            x.append(x[-1])
            y.append(y[-1] + 1)

    x = x[1:]
    y = y[1:]

    import bisect

    if x[-1] < K:
        x, y = y, x
        K = (y[-1] - (K - x[-1]))

    ans = 0
    for i in range(N):
        l = bisect.bisect_left(x, i + 1)
        r = bisect.bisect_right(x, i + K)
        ans = max(ans, r - l)
    return ans




# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, K = map(int, input().split())
    S = input()
    a = solve(N, K, S)
    print(a)


if __name__ == '__main__':
    main()

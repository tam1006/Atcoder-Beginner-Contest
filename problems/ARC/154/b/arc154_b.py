#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache


# def solve(N: int, S: str, T: str) -> int:
def solve(N, S, T):
    # if list(S).sort() != list(T).sort():
    if sorted(list(S)) != sorted(list(T)):
        return -1
    elif S == T:
        return 0

    ok = N - 1
    ng = 0

    while ok - ng > 1:
        mid = (ok + ng) // 2
        if is_ok(mid, S, T):
            ok = mid
        else:
            ng = mid

    return ok

def is_ok(x, S, T):
    N = len(T)
    for i in range(len(T)):
        if x < N and S[x] == T[i]:
            x += 1

    return x == N



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    S = input()
    T = input()
    a = solve(N, S, T)
    print(a)


if __name__ == '__main__':
    main()

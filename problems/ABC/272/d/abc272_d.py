#!/usr/bin/env python3
# from typing import *


# def solve(N: int, M: int) -> Tuple[List[str], List[List[str]]]:
def solve(N, M):
    see = [[-1 for _ in range(N)] for _ in range(N)]
    see[0][0] = 0

    dx = []
    dy = []

    for i in range(int(M**0.5)+1):
        for j in range(int(M**0.5)+1):
            if i**2 + j**2 == M:
                dx.append(i)
                dy.append(j)

                dx.append(-i)
                dy.append(-j)

                dx.append(i)
                dy.append(-j)

                dx.append(-i)
                dy.append(j)

    from collections import deque

    q = deque()
    q.append((0, 0))

    while q:
        x, y = q.popleft()
        
        for i in range(len(dx)):
            nx = x + dx[i]
            ny = y + dy[i]

            if 0 <= nx < N and 0 <= ny < N and see[nx][ny] == -1:
                see[nx][ny] = see[x][y] + 1
                q.append((nx, ny))

    return see


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    c = solve(N, M)
    for i in range(N):
        print(*c[i])


if __name__ == '__main__':
    main()

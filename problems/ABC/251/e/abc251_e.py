#!/usr/bin/env python3
# from typing import *


# def solve(N: int, A: List[int]) -> int:
def solve(N, A):
    dp = [[float('inf')]*2 for _ in range(N)]

    # 行動１を行わない場合
    dp[0][0] = 0
    for i in range(1, N):
        dp[i][0] = dp[i-1][1]
        dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + A[i]

    ans1 = dp[N-1][1]

    # 行動１を行う場合
    dp = [[float('inf')]*2 for _ in range(N)]
    dp[0][1] = A[0]

    for i in range(1, N):
        dp[i][0] = dp[i-1][1]
        dp[i][1] = min(dp[i-1][0], dp[i-1][1]) + A[i]

    ans2 = min(dp[N-1][0], dp[N-1][1])

    return min(ans1, ans2)

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    A = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, A)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *


# def solve(N: int, W: int, A: List[int]) -> int:
def solve(N, W, A):
    good = [False]*(W+1)

    for i in range(N):
        S = A[i]
        if S <= W:
            good[S] = True
        for j in range(i+1, N):
            S = A[i]+A[j]
            if S <= W:
                good[S] = True
            for k in range(j+1, N):
                S = A[i]+A[j]+A[k]
                if S <= W:
                    good[S] = True

    return sum(good)


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    W = int(next(tokens))
    A = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, W, A)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

import platform
if platform.python_implementation() == 'PyPy':
    import pypyjit
    pypyjit.set_param('max_unroll_recursion=-1')

MOD = 998244353


# def solve(N: int, A: List[int], B: List[int]) -> int:
def solve(N, A, B):
    dp = [[0] * 2 for _ in range(N)]
    dp[0][0] = 1
    dp[0][1] = 1

    for i in range(1, N):
        if A[i] != A[i-1]:
            dp[i][0] += dp[i-1][0]
            dp[i][0] %= MOD
        if A[i] != B[i-1]:
            dp[i][0] += dp[i-1][1]
            dp[i][0] %= MOD

        if B[i] != A[i-1]:
            dp[i][1] += dp[i-1][0]
            dp[i][1] %= MOD
        if B[i] != B[i-1]:
            dp[i][1] += dp[i-1][1]
            dp[i][1] %= MOD

    return (dp[-1][0] + dp[-1][1]) % MOD



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    A = [None for _ in range(N)]
    B = [None for _ in range(N)]
    for i in range(N):
        A[i], B[i] = map(int, input().split())
    a = solve(N, A, B)
    print(a)


if __name__ == '__main__':
    main()

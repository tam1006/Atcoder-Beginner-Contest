#!/usr/bin/env python3
# from typing import *


# def solve(N: int, M: int, X: List[int], C: List[int], Y: List[int]) -> int:
def solve(N, M, X, CY):
    dp = [[-1] * (N + 1) for _ in range(N + 1)]
    dp[0][0] = 0

    CY.sort(key=lambda x: x[0])
    Y = []
    j = 0
    for i in range(N+1):
        if j < M and i == CY[j][0]:
            Y.append(CY[j][1])
            j += 1
        else:
            Y.append(0)

    for i in range(N):
        for j in range(N):
            if dp[i][j] != -1:
                dp[i+1][0] = max(dp[i+1][0], dp[i][j])
                dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j] + X[i] + Y[j+1])


    return max(dp[-1])


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    X = list(map(int, input().split()))
    CY = [list(map(int, input().split())) for _ in range(M)]
    a = solve(N, M, X, CY)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *

MOD = 998244353

# def solve(N: int, a: List[int]) -> int:
def solve(N, a):
    dp = [[[[0]*N for _ in range(N+1)] for _ in range(N+1)] for _ in range(N+1)]
    
    for i in range(N+1):
        for k in range(N+1):
            dp[i][0][k][0] = 1

    for i in range(N):
        for j in range(N):
            for k in range(1, N+1):
                for l in range(k):
                    if j != i:
                        dp[i+1][j+1][k][(l+a[i])%k] += dp[i][j][k][l]
                        dp[i+1][j+1][k][(l+a[i])%k] %= MOD

                    dp[i+1][j][k][l] += dp[i][j][k][l]
                    dp[i+1][j][k][l] %= MOD

    print(dp[1][1][1][0])
    print(dp[2][1][1][0])

    ans = 0
    for j in range(1, N+1):
        ans += dp[N][j][j][0]
        ans %= MOD

    return ans

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    a = [None for _ in range(N)]
    for i in range(N):
        a[i] = int(next(tokens))
    assert next(tokens, None) is None
    a1 = solve(N, a)
    print(a1)


if __name__ == '__main__':
    main()

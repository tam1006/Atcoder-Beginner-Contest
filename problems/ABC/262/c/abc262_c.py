#!/usr/bin/env python3
# from typing import *


# def solve(N: int, a: List[int]) -> int:
def solve(N, a):
    from collections import defaultdict

    d = dict()
    ans = 0

    for i in range(N):
        if a[i] == i+1:
            ans += 1

        elif a[i] in d.keys():
            d[a[i]].append(i+1)
        else:
            d[a[i]] = [i+1]

    ans = ans*(ans-1)//2

    for key, value in d.items():
        for v in value:
            if v == key:
                ans += 0.5
            elif v in d.keys() and key in d[v]:
                ans += 0.5

    return int(ans)

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    a = [None for _ in range(N)]
    for i in range(N):
        a[i] = int(next(tokens))
    assert next(tokens, None) is None
    a1 = solve(N, a)
    print(a1)


if __name__ == '__main__':
    main()

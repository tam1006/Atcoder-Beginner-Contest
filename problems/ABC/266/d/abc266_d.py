#!/usr/bin/env python3
# from typing import *


# def solve(N: int, T: List[int], X: List[int], A: List[int]) -> int:
def solve(N, T, X, A):
    dp = [[-float('inf') for _ in range(5)] for __ in range(10**5+1)]
    dp[0][0] = 0
    k = 0

    for i in range(1, 10**5+1):
        if k == N:
            dp[10**5] = dp[i-1]
            break
        if T[k] == i:
            for j in range(5):
                if j == X[k]:
                    dp[i][j] = max(dp[i-1][j], dp[i-1][max(0, j-1)], dp[i-1][min(4, j+1)]) + A[k]
                else:
                    dp[i][j] = max(dp[i-1][j], dp[i-1][max(0, j-1)], dp[i-1][min(4, j+1)])
            k += 1
        else:
            for j in range(5):
                dp[i][j] = max(dp[i-1][j], dp[i-1][max(0, j-1)], dp[i-1][min(4, j+1)])


    return max(dp[10**5])


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    T = [None for _ in range(N)]
    X = [None for _ in range(N)]
    A = [None for _ in range(N)]
    for i in range(N):
        T[i], X[i], A[i] = map(int, input().split())
    a = solve(N, T, X, A)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *
import sys
sys.setrecursionlimit(10**6)


# def solve(N: int, M: int, u: List[int], v: List[int]) -> int:
def solve(N, M, u, v):
    global edges, ans
    edges = [[] for _ in range(N)]
    for i in range(M):
        edges[u[i]-1].append(v[i]-1)
        edges[v[i]-1].append(u[i]-1)

    visited = [False for _ in range(N)]
    visited[0] = True
    ans = 1
    dfs(visited, 0)

    return min(ans, 10**6)

def dfs(visited, now):
    global ans

    for next in edges[now]:
        if visited[next]:
            continue

        visited[next] = True
        ans += 1
        if ans >= 10**6:
            print(10**6)
            sys.exit()

        dfs(visited, next)

        visited[next] = False
        if ans >= 10**6:
            print(10**6)
            sys.exit()


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    u = [None for _ in range(M)]
    v = [None for _ in range(M)]
    for i in range(M):
        u[i], v[i] = map(int, input().split())
    a = solve(N, M, u, v)
    print(a)


if __name__ == '__main__':
    main()


#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
from functools import lru_cache


# def solve(S: str) -> int:
def solve(S):
    necessary = set()
    uncertain = set()
    not_use = set()

    for i, s in enumerate(S):
        if s == 'o':
            necessary.add(i)
        elif s == '?':
            uncertain.add(i)
        else:
            not_use.add(i)

    ans = 0
    for a in range(10):
        for b in range(10):
            for c in range(10):
                for d in range(10):
                    if a in not_use or b in not_use or c in not_use or d in not_use:
                        continue

                    tmp = set([a, b, c, d])
                    flag = True
                    for n in necessary:
                        if n not in tmp:
                            flag = False
                            break

                    if flag:
                        ans += 1

    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    S = input()
    a = solve(S)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *


# def solve(n: int, a: List[int]) -> List[str]:
def solve(Q, que):
    from collections import defaultdict
    from collections import deque
    d = defaultdict(lambda: deque())

    A = deque()
    ans = []
    
    for i in range(Q):
        if que[i][0] == 'DELETE':
            if A:
                A.pop()
        else:
            q, x = que[i]
            if q == 'ADD':
               A.append(x)
            # elif q == 'DELETE':
                # A.pop()
            elif q == 'SAVE':
                d[x] = A.copy()
            elif q == 'LOAD':
                # A = deque(d[x])
                A = d[x]

        if A:
            val = A.pop()
            ans.append(val)
            A.append(val)
        else:
            ans.append(-1)

    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    Q = int(input())
    que = list(input().split() for _ in range(Q))
    ans = solve(Q, que)
    print(*ans)


if __name__ == '__main__':
    main()

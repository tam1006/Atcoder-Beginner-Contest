#!/usr/bin/env python3
# from typing import *


# def solve(N: int, K: int, D: int, a: List[int]) -> int:
def solve(N, K, D, a):
    dp = [[[-float('inf') for _ in range(D)] for _ in range(K + 1)] for _ in range(N + 1)]
    for i in range(N):
        dp[i][0][0] = 0

    for i in range(1, N+1):
        for j in range(1, K+1):
            for k in range(D):
                dp[i][j][k] = max(dp[i-1][j][k], dp[i-1][j-1][(k-a[i-1])%D] + a[i-1])

    if dp[N][K][0] == -float('inf'):
        return -1
    else:
        return dp[N][K][0]


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    N, K, D = map(int, input().split())
    a = list(map(int, input().split()))
    a1 = solve(N, K, D, a)
    print(a1)


if __name__ == '__main__':
    main()

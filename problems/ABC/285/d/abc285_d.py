#!/usr/bin/env python3
# from typing import *

YES = 'Yes'
NO = 'No'

from collections import deque
def topological_sort(G, into_num, V):
    #入ってくる有向辺を持たないノードを列挙
    q = deque()
    #V: 頂点数
    for i in range(V):
        if into_num[i]==0:
            q.append(i)
    
    #以下、幅優先探索
    ans = []
    while q:
        v = q.popleft()
        ans.append(v)
        for adj in G[v]:
            into_num[adj] -= 1 #入次数を減らす
            if into_num[adj]==0:
                q.append(adj) #入次数が0になったら、キューに入れる
    
    return ans

# def solve(N: int, S: List[str], T: List[str]) -> str:
def solve(N, S, T):
    G = []
    d = {}
    V = 0
    into_num = []

    for i in range(N):
        if S[i] not in d.keys():
            d[S[i]] = V
            V += 1
            G.append([])
            into_num.append(0)

        if T[i] not in d.keys():
            d[T[i]] = V
            V += 1
            G.append([])
            into_num.append(0)

        G[d[S[i]]].append(d[T[i]])
        into_num[d[T[i]]] += 1

    ans = topological_sort(G, into_num, V)

    if len(ans) != V:
        return NO


    return YES



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    S = [None for _ in range(N)]
    T = [None for _ in range(N)]
    for i in range(N):
        S[i], T[i] = input().split()
    a = solve(N, S, T)
    print(a)


if __name__ == '__main__':
    main()

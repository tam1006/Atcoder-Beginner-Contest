#!/usr/bin/env python3
# from typing import *


# def solve(n: int, a: List[int]) -> Any:
def solve(A):
    global H, W
    dp = [[[float('inf')]*H for _ in range(2)] for _ in range(2)]

    dp[0][0][0] = 0
    dp[0][0][1] = 1

    for i in range(1, H):
        for j in range(2):
            for k in range(2):
                if k == 0:
                    if check(A, j==1, k==1, i):
                        dp[i][j][k] = min(dp[i][j][k], dp[i-1][j][k]+1)



def check(A, flag1, flag2, index):
    global H, W

    dx = [1, 0, -1, 0]
    dy = [0, 1, 0, -1]

    for w in range(W):
        for sx, sy in zip(dx, dy):
            nx = w + sx
            ny = index + sy
            cnt = 0
            flag_cnt = 0
            if 0 <= nx < W and 0 <= ny < H:
                cnt += 1
                if flag1 == flag2:
                    if A[index][w] != A[ny][nx]:
                        flag_cnt += 1
                else:
                    if A[index][w] == A[ny][nx]:
                        flag_cnt += 1

            if cnt == flag_cnt:
                return False

    return True

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    global H, W
    H, W = map(int, input().split())
    A = [list(map(int, input().split())) for _ in range(H)]
    ans = solve(A)
    print(ans)  # TODO: edit here


if __name__ == '__main__':
    main()

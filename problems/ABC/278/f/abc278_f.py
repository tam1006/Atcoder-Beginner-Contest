#!/usr/bin/env python3
# from typing import *

FIRST = 'First'
SECOND = 'Second'


# def solve(N: int, S: List[str]) -> str:
def solve(N, S):
    global grundy
    grundy = [-1] * (1 << N + 1)
    grundy[1<<N] = 0

    mexs = set()
    for i in range(N):
        mexs.add(grundy_num(1 << i, i))

    if mex(mexs) == 0:
        return SECOND
    else:
        return FIRST

def grundy_num(s, now):
    global N, S, grundy

    if grundy[s] != -1:
        return grundy[s]

    mexs = set()
    for i in range(N):
        if s >> i & 1:
            continue

        if S[i][0] == S[now][-1]:
            mexs.add(grundy_num(s | 1 << i, i))

    grundy[s] = mex(mexs)
    return grundy[s]


def mex(s):
    ans = 0
    while ans in s:
        ans += 1

    return ans



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    global N, S
    N = int(input())
    S = [None for _ in range(N)]
    for i in range(N):
        S[i] = input()
    a = solve(N, S)
    print(a)


if __name__ == '__main__':
    main()

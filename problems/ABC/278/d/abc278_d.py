#!/usr/bin/env python3
# from typing import *


# def solve(n: int, a: List[int]) -> Any:
from collections import defaultdict
def solve(N, A, Q, q):
    val = 0
    add_val = defaultdict(int)

    for i in range(N):
        add_val[i] = A[i]

    for i in range(Q):
        if q[i][0] == '1':
            # A = [int(q[i][1])] * N
            val = int(q[i][1])
            add_val = defaultdict(int)
        elif q[i][0] == '2':
            # A[int(q[i][1])-1] += int(q[i][2])
            add_val[int(q[i][1])-1] += int(q[i][2])
        elif q[i][0] == '3':
            print(val + add_val[int(q[i][1])-1])



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    A = list(map(int, input().split()))
    Q = int(input())
    q = [list(input().split()) for _ in range(Q)]

    solve(N, A, Q, q)


if __name__ == '__main__':
    main()

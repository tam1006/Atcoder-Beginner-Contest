#!/usr/bin/env python3
# from typing import *


# def solve(n: int, a: List[int]) -> Any:
from collections import defaultdict
def solve(H, W, N, h, w, A):
    num_count = defaultdict(int)

    for hh in range(H):
        for ww in range(W):
            num_count[A[hh][ww]] += 1

    max_num = len(num_count.keys())
    ans = [[max_num] * (W - w + 1) for _ in range(H - h + 1)]

    for nh in range(H-h+1):
        num_count_tmp = num_count.copy()
        for nw in range(W-w+1):
            if nw == 0:
                for hh in range(nh, nh+h):
                    for ww in range(nw, nw+w):
                        num_count_tmp[A[hh][ww]] -= 1
                        if num_count_tmp[A[hh][ww]] == 0:
                            ans[nh][nw] -= 1
            else:
                ans[nh][nw] = ans[nh][nw-1]
                for hh in range(nh, nh+h):
                    num_count_tmp[A[hh][nw-1]] += 1
                    if num_count_tmp[A[hh][nw-1]] == 1:
                        ans[nh][nw] += 1

                    num_count_tmp[A[hh][nw+w-1]] -= 1
                    if num_count_tmp[A[hh][nw+w-1]] == 0:
                        ans[nh][nw] -= 1

    for a in ans:
        print(*a)


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    # failed to analyze input format
    H, W, N, h, w = map(int, input().split())
    A = [list(map(int, input().split())) for _ in range(H)]
    solve(H, W, N, h, w, A)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
from functools import lru_cache

YES = 'Yes'
NO = 'No'


# def solve(N: int, A: List[int], M: int, B: List[int], X: int) -> str:
def solve(N, A, M, B, X):
    dp = [0] * (X+1)
    dp[0] = 1

    for i in range(M):
        dp[B[i]] = -1

    for i in range(X):
        if dp[i] == 1:
            for j in range(N):
                if i + A[j] <= X and dp[i+A[j]] != -1:
                    dp[i+A[j]] = 1
    
    if dp[X] == 1:
        return YES
    else:
        return NO






# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    A = [None for _ in range(N)]
    for i in range(N):
        A[i] = int(next(tokens))
    M = int(next(tokens))
    B = [None for _ in range(M)]
    for i in range(M):
        B[i] = int(next(tokens))
    X = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, A, M, B, X)
    print(a)


if __name__ == '__main__':
    main()

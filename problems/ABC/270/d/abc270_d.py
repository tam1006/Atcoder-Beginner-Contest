#!/usr/bin/env python3
# from typing import *


# def solve(N: int, K: int, A: List[int]) -> int:
def solve(N, K, A):
    dp = [0] * (N + 1)
    dp[1] = 1

    for i in range(2, N+1):
        for j in range(K):
            if i - A[j] < 0:
                break

            dp[i] = max(dp[i], A[j] + (i-A[j] - dp[i - A[j]]))


    return dp[N]
        
# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    K = int(next(tokens))
    A = [None for _ in range(K)]
    for i in range(K):
        A[i] = int(next(tokens))
    assert next(tokens, None) is None
    a = solve(N, K, A)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *

def factor(n):
    ret = []
    tmp = 0
    while n % 2 == 0:
        tmp += 1
        n //= 2
    ret.append(tmp)

    tmp = 0
    while n % 3 == 0:
        tmp += 1
        n //= 3
    ret.append(tmp)
    ret.append(n)

    return ret

# def solve(N: int, a: List[int]) -> int:
def solve(N, a):
    ans = 0

    for i in range(N):
        if i == 0:
            fac = factor(a[i])
            continue

        tmp = factor(a[i])
        for j in range(3):
            if j == 2:
                if fac[j] != tmp[j]:
                    return -1

            if tmp[j] < fac[j]:
                ans += i*(fac[j]-tmp[j])
                fac[j] = tmp[j]
            else:
                ans += tmp[j] - fac[j]

    return ans




# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    # tokens = iter(sys.stdin.read().split())
    # N = int(next(tokens))
    # a = [None for _ in range(N)]
    # for i in range(N):
        # a[i] = int(next(tokens))
    # assert next(tokens, None) is None
    N = int(input())
    a = list(map(int, input().split()))
    a1 = solve(N, a)
    print(a1)


if __name__ == '__main__':
    main()

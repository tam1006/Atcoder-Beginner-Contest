#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

import bisect


# def solve(N: int, a: List[int]) -> int:
def solve(N, a):
    a = sorted(list(set(a)))

    cnt = N - len(a)

    l = 0
    r = 10**9

    while r - l > 1:
        mid = (l + r) // 2

        if is_ok(mid, a, cnt):
            l = mid
        else:
            r = mid

    return l

def is_ok(x, a, cnt):
    index = bisect.bisect_left(a, x+1)

    cnt += len(a) - index

    if (x - index) <= cnt // 2:
        return True
    else:
        return False



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    import sys
    tokens = iter(sys.stdin.read().split())
    N = int(next(tokens))
    a = [None for _ in range(N)]
    for i in range(N):
        a[i] = int(next(tokens))
    assert next(tokens, None) is None
    a1 = solve(N, a)
    print(a1)


if __name__ == '__main__':
    main()

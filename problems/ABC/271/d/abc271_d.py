#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

YES = 'Yes'
NO = 'No'


# def solve(N: int, S: int, a: List[int], b: List[int]) -> Any:
def solve(N, S, a, b):
    dp = [[[False, ''] for _ in range(S+1)] for _ in range(N+1)]
    dp[0][0] = [True, '']

    for i in range(N):
        for j in range(S+1):
            if dp[i][j][0]:
                if j + a[i] <= S and not dp[i+1][j+a[i]][0]:
                    dp[i+1][j+a[i]] = [True, dp[i][j][1] + 'H']
                if j + b[i] <= S and not dp[i+1][j+b[i]][0]:
                    dp[i+1][j+b[i]] = [True, dp[i][j][1] + 'T']

    if dp[N][S][0]:
        print(YES)
        print(dp[N][S][1])
    else:
        print(NO)



# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, S = map(int, input().split())
    a = [None for _ in range(N)]
    b = [None for _ in range(N)]
    for i in range(N):
        a[i], b[i] = map(int, input().split())
    solve(N, S, a, b)



if __name__ == '__main__':
    main()

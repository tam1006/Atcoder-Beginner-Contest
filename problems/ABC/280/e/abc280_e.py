#!/usr/bin/env python3
# from typing import *
import sys
sys.setrecursionlimit(10**6)
from functools import lru_cache

MOD = 998244353

@lru_cache(maxsize=None)
def modinv(x):
    return pow(x, MOD-2, MOD)

# def solve(N: int, P: int) -> int:
def solve(N, P):
    ans = dfs(N, P)
    return ans

@lru_cache(maxsize=None)
def dfs(N, P):
    if N == 0:
        return 0
    elif N == 1:
        return 1

    a = (dfs(N-2, P)*P*modinv(100))%MOD
    b = (dfs(N-1, P)*(100-P)*modinv(100))%MOD

    return (a+b+1)%MOD

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    # N, P = map(ModInt, map(int, input().split()))
    N, P = map(int, input().split())
    a = solve(N, P)
    print(a)


if __name__ == '__main__':
    main()

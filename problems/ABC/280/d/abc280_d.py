#!/usr/bin/env python3
# from typing import *
def factorization(n):
    arr = []
    temp = n
    for i in range(2, int(-(-n**0.5//1))+1):
        if temp%i==0:
            cnt=0
            while temp%i==0:
                cnt+=1
                temp //= i
            arr.append([i, cnt])

    if temp!=1:
        arr.append([temp, 1])

    if arr==[]:
        arr.append([n, 1])

    return arr

# def solve(K: int) -> int:
def solve(K):
    fact = factorization(K)
    ans = 2
    for p, i in fact:
        val = 0
        count = 0
        while count < i:
            val += p
            tmp_val = val
            tmp = 0
            while tmp_val != 0 and tmp_val % p == 0:
                tmp += 1
                tmp_val //= p
            count += tmp

        ans = max(ans, val)

    return min(ans, K)


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    K = int(input())
    a = solve(K)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *


# def solve(N: int, M: int, A: List[int]) -> int:
def solve(N, M, A):
    A.sort()
    ans = float('inf')

    S = sum(A)

    l = -1
    for i in range(N-1):
        if A[i+1] == A[i] or A[i+1] == (A[i] + 1) % M:
            continue
        else:
            l = i+1

    if l == -1:
        return 0

    A = A[l:] + A[:l]

    i = 0
    while i < N:
        tmp = 0
        tmp += A[i]
        while i < N-1 and (A[i+1] == A[i] or A[i+1] == (A[i] + 1) % M):
            i += 1
            tmp += A[i]

        ans = min(ans, S - tmp)
        i += 1

    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N, M = map(int, input().split())
    A = list(map(int, input().split()))
    a = solve(N, M, A)
    print(a)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
# from typing import *
import sys

sys.setrecursionlimit(10**7)
input = lambda: sys.stdin.readline().rstrip()
from functools import lru_cache

from collections import deque

# def solve(N: int, X: List[int], Y: List[int]) -> int:
def solve(N, X, Y):
    dx = [-1, -1, 0, 0, 1, 1]
    dy = [-1, 0, -1, 1, 0, 1]

    mass = [[0] * (2000+1) for _ in range(2000+1)]

    for i in range(N):
        x = X[i] + 1000
        y = Y[i] + 1000

        mass[x][y] = 1

    ans = 0
    for i in range(N):
        x = X[i] + 1000
        y = Y[i] + 1000

        if mass[x][y] == 0:
            continue

        q = deque()
        q.append((x, y))

        while q:
            x, y = q.popleft()

            if mass[x][y] == 0:
                continue

            mass[x][y] = 0

            for j in range(6):
                nx = x + dx[j]
                ny = y + dy[j]

                if 0 <= nx < 2000+1 and 0 <= ny < 2000+1 and mass[nx][ny] == 1:
                    q.append((nx, ny))

        ans += 1

    return ans
    

# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    N = int(input())
    X = [None for _ in range(N)]
    Y = [None for _ in range(N)]
    for i in range(N):
        X[i], Y[i] = map(int, input().split())
    a = solve(N, X, Y)
    print(a)


if __name__ == '__main__':
    main()

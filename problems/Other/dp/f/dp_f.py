#!/usr/bin/env python3
# from typing import *


# def solve(s, t):
    # Ns = len(s)
    # Nt = len(t)
    # dp = [[[0, ''] for _ in range(Nt+1)] for _ in range(Ns+1)]

    # for i in range(1, Ns+1):
        # for j in range(1, Nt+1):
            # if s[i-1] == t[j-1]:
                # dp[i][j] = [dp[i-1][j-1][0] + 1, dp[i-1][j-1][1] + s[i-1]]
            # else:
                # if dp[i-1][j][0] > dp[i][j-1][0]:
                    # dp[i][j] = dp[i-1][j]
                # else:
                    # dp[i][j] = dp[i][j-1]

    # return dp[Ns][Nt][1]

def solve(s, t):
    Ns = len(s)
    Nt = len(t)
    dp = [[0 for _ in range(Nt+1)] for _ in range(Ns+1)]

    for i in range(1, Ns+1):
        for j in range(1, Nt+1):
            if s[i-1] == t[j-1]:
                dp[i][j] = dp[i-1][j-1] + 1
            else:
                dp[i][j] = max(dp[i-1][j], dp[i][j-1])

    ans = ''
    i = Ns
    j = Nt
    while i > 0 and j > 0:
        if s[i-1] == t[j-1]:
            ans = s[i-1] + ans
            i -= 1
            j -= 1
        else:
            if dp[i][j] == dp[i-1][j]:
                i -= 1
            else:
                j -= 1

    return ans


# generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
def main():
    s = input()
    t = input()

    print(solve(s, t))


if __name__ == '__main__':
    main()
